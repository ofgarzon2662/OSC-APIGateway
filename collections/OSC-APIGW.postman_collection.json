{
	"info": {
		"_postman_id": "bb648290-d705-4221-9c13-b04f58060e1b",
		"name": "OSC-APIGW",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22997977"
	},
	"item": [
		{
			"name": "Organization",
			"item": [
				{
					"name": "Delete All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea con una fecha de fundación en el futuro",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"message\": [\r\n        \"La fecha de fechaFundacion debe ser en el pasado.\"\r\n    ],\r\n    \"error\": \"Bad Request\",\r\n    \"statusCode\": 400\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"orgId\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().name).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().description).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"description\": \"This organization focuses on {{$randomLoremWords}} and its main mission in life is {{$randomLoremWords}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\",\r\n    \"id\": \"211411a8-e705-4795-8b23-bcf41279a4d3\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a second org",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(412)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"There is already an organization in the database. There can only be one.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"description\": \"This organization focuses on {{$randomLoremWords}} and its main mission in life is {{$randomLoremWords}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea 2",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\",\r\n    \"id\": \"a48a1a34-6bed-46e4-bc5b-33fbfa1454af\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"code is 204\", function() {\r",
									"    pm.response.to.have.status(204)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea con una fecha de fundación en el futuro",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"message\": [\r\n        \"La fecha de fechaFundacion debe ser en el pasado.\"\r\n    ],\r\n    \"error\": \"Bad Request\",\r\n    \"statusCode\": 400\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete NonExistent Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"code is 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Get error message\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"The organization with the provided id does not exist\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea con una fecha de fundación en el futuro",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"message\": [\r\n        \"La fecha de fechaFundacion debe ser en el pasado.\"\r\n    ],\r\n    \"error\": \"Bad Request\",\r\n    \"statusCode\": 400\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Org short name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CODE IS 400\", function() {\r",
									"    pm.response.to.have.status(400)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"The name of the organization is required and must have at least 4 characters\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"UCS\",\r\n    \"description\": \"This organization focuses on {{$randomLoremWords}} and its main mission in life is {{$randomLoremWords}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\",\r\n    \"id\": \"211411a8-e705-4795-8b23-bcf41279a4d3\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Org No Description",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CODE IS 400\", function() {\r",
									"    pm.response.to.have.status(400)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"The description is required and must be at least 20 characters long\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"UCSD\",\r\n    \"description\": \"Short\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\",\r\n    \"id\": \"211411a8-e705-4795-8b23-bcf41279a4d3\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Org long Description",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"CODE IS 400\", function() {\r",
									"    pm.response.to.have.status(400)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"The description cannot be longer than 250 characters\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"UCSD\",\r\n    \"description\": \"Founded in 1960, the University of California, San Diego (UCSD) is a renowned public research university located in La Jolla, California. Known for its innovation, academic excellence, and vibrant campus culture, UCSD offers top-ranked programs in a wide range of fields including oceanography, engineering, biological sciences, and public health. The university is home to over 38,000 students, cutting-edge research facilities, and numerous Nobel laureates and distinguished faculty members. UCSD also prioritizes sustainability, diversity, and global engagement, fostering an inclusive environment that supports groundbreaking research and community impact.\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\",\r\n    \"id\": \"211411a8-e705-4795-8b23-bcf41279a4d3\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Org 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"orgId\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().name).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().description).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"description\": \"This organization focuses on {{$randomLoremWords}} and its main mission in life is {{$randomLoremWords}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\",\r\n    \"id\": \"211411a8-e705-4795-8b23-bcf41279a4d3\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get All Orgs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Non Empty list\", function() {\r",
									"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty;\r",
									"    pm.expect(pm.response.json()).to.have.lengthOf(1);\r",
									"    pm.expect(pm.response.json()[0].id).to.equal(pm.environment.get(\"orgId\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": [
						{
							"name": "Obtener todas las aerolíneas",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get One Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Non empty response\", function() {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData.name).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.description).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.id).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.id).to.equal(pm.environment.get(\"orgId\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una aerolínea",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"code is 204\", function() {\r",
									"    pm.response.to.have.status(204)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea con una fecha de fundación en el futuro",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"message\": [\r\n        \"La fecha de fechaFundacion debe ser en el pasado.\"\r\n    ],\r\n    \"error\": \"Bad Request\",\r\n    \"statusCode\": 400\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete NonExistent Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"code is 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Get error message\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"The organization with the provided id does not exist\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea con una fecha de fundación en el futuro",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"message\": [\r\n        \"La fecha de fechaFundacion debe ser en el pasado.\"\r\n    ],\r\n    \"error\": \"Bad Request\",\r\n    \"statusCode\": 400\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get One Org No Orgs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Get error message\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"The organization with the provided id does not exist\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una aerolínea",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get All Orgs No Orgs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Get error message\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"There are no organizations in the database\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": [
						{
							"name": "Obtener todas las aerolíneas",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Org 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"orgId\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().name).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().description).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"description\": \"This organization focuses on {{$randomLoremWords}} and its main mission in life is {{$randomLoremWords}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\",\r\n    \"id\": \"211411a8-e705-4795-8b23-bcf41279a4d3\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update an Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().name).to.contain('Real Madrid CF');\r",
									"    pm.expect(pm.response.json().description).to.contain('Club de fútbol de Madrid');\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.equal(pm.environment.get(\"orgId\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Real Madrid CF\",\r\n    \"description\": \"Club de fútbol de Madrid, España, fundado en 1902. Ganador de múltiples títulos europeos.\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar una aerolínea",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"97bcab5c-eb7a-41fe-ba13-b4faf42c5915\",\r\n    \"nombre\": \"Latam Airlines new\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad. new\",\r\n    \"fechaFundacion\": \"2024-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es/new\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get One Org 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Non empty response\", function() {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(pm.response.json().name).to.contain('Real Madrid CF');\r",
									"    pm.expect(pm.response.json().description).to.contain('Club de fútbol de Madrid');\r",
									"    pm.expect(responseData.name).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.description).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.id).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.id).to.equal(pm.environment.get(\"orgId\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener una aerolínea",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update an Org that doesn't exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Get error message\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"The organization with the provided id does not exist\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Real Madrid CF\",\r\n    \"description\": \"Club de fútbol de Madrid, España, fundado en 1902. Ganador de múltiples títulos europeos.\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{$guid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{$guid}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar una aerolínea que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La aerolínea con el id dado no fue encontrada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{$guid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{$guid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update an Org short desc",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 400\", function() {\r",
									"    pm.response.to.have.status(400)\r",
									"});\r",
									"\r",
									"pm.test(\"Get error message\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"The description is required and must be at least 20 characters long\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Real Madrid CF\",\r\n    \"description\": \"Club.\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar una aerolínea que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La aerolínea con el id dado no fue encontrada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{$guid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{$guid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update an Org long description",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 400\", function() {\r",
									"    pm.response.to.have.status(400)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"The description cannot be longer than 250 characters\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Real Madrid CF\",\r\n    \"description\": \"Real Madrid Club de Fútbol, commonly known as Real Madrid, is a professional football club based in Madrid, Spain. Founded on March 6, 1902, it is one of the most successful and prestigious clubs in football history. Known for its iconic all-white kit, Real Madrid has a rich legacy that includes numerous domestic and international titles, including a record number of UEFA Champions League titles and La Liga championships. The club is renowned for its loyal fanbase, global influence, and its home stadium, the Santiago Bernabéu, which has witnessed some of the greatest moments in football history. Real Madrid's philosophy emphasizes excellence, resilience, and a commitment to nurturing talent, from legendary players like Alfredo Di Stéfano and Cristiano Ronaldo to rising stars. As a symbol of Spanish football, the club is celebrated worldwide for its contributions to the sport and its enduring spirit of competition and success.\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar una aerolínea que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La aerolínea con el id dado no fue encontrada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{$guid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{$guid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"code is 204\", function() {\r",
									"    pm.response.to.have.status(204)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea con una fecha de fundación en el futuro",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"message\": [\r\n        \"La fecha de fechaFundacion debe ser en el pasado.\"\r\n    ],\r\n    \"error\": \"Bad Request\",\r\n    \"statusCode\": 400\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete NonExistent Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"code is 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Get error message\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"The organization with the provided id does not exist\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea con una fecha de fundación en el futuro",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"message\": [\r\n        \"La fecha de fechaFundacion debe ser en el pasado.\"\r\n    ],\r\n    \"error\": \"Bad Request\",\r\n    \"statusCode\": 400\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Delete All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea con una fecha de fundación en el futuro",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"message\": [\r\n        \"La fecha de fechaFundacion debe ser en el pasado.\"\r\n    ],\r\n    \"error\": \"Bad Request\",\r\n    \"statusCode\": 400\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"orgId\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().name).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().description).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomCompanyName}}\",\r\n    \"description\": \"This organization focuses on {{$randomLoremWords}} and its main mission in life is {{$randomLoremWords}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": [
						{
							"name": "Crear aerolínea",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\",\r\n    \"id\": \"211411a8-e705-4795-8b23-bcf41279a4d3\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get All Orgs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Non Empty list\", function() {\r",
									"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty;\r",
									"    pm.expect(pm.response.json()).to.have.lengthOf(1);\r",
									"    pm.expect(pm.response.json()[0].id).to.equal(pm.environment.get(\"orgId\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": [
						{
							"name": "Obtener todas las aerolíneas",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"userId1\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().name).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().email).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().username).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().organization.id).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().organization.id).to.equal(pm.environment.get(\"orgId\"))\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"username\": \"{{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get User 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Non empty response\", function() {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData.name).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.username).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.id).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.id).to.equal(pm.environment.get(\"userId1\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}/users/{{userId1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}",
								"users",
								"{{userId1}}"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get User 1 Wrong Org Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Get error message\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"The organization provided does not exist\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{$randomUUID}}/users/{{userId1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{$randomUUID}}",
								"users",
								"{{userId1}}"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get User 1 bad Org Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 412\", function() {\r",
									"    pm.response.to.have.status(412)\r",
									"});\r",
									"\r",
									"pm.test(\"Get error message\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"The organizationId provided is not valid\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/no-valid-id/users/{{userId1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"no-valid-id",
								"users",
								"{{userId1}}"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create User 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"userId2\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().name).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().email).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().username).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().organization.id).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().organization.id).to.equal(pm.environment.get(\"orgId\"))\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"username\": \"{{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get User 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Non empty response\", function() {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData.name).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.username).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.id).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.id).to.equal(pm.environment.get(\"userId2\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}/users/{{userId2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}",
								"users",
								"{{userId2}}"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create User 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"userId3\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().name).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().email).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().username).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().organization.id).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().organization.id).to.equal(pm.environment.get(\"orgId\"))\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"username\": \"{{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get User 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Non empty response\", function() {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData.name).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.username).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.id).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.id).to.equal(pm.environment.get(\"userId3\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}/users/{{userId3}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}",
								"users",
								"{{userId3}}"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get User that doesn't exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Get error message\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"The user with the provided id does not exist\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"username\": \"{{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}/users/{{$randomUUID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}",
								"users",
								"{{$randomUUID}}"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get All Orgs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Non Empty list\", function() {\r",
									"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty;\r",
									"    pm.expect(pm.response.json()).to.have.lengthOf(1);\r",
									"    pm.expect(pm.response.json()[0].id).to.equal(pm.environment.get(\"orgId\"));\r",
									"    pm.expect(pm.response.json()[0].users).to.not.be.empty;\r",
									"    pm.expect(pm.response.json()[0].users).to.be.an('array').that.has.lengthOf(3);\r",
									"    pm.expect(pm.response.json()[0].artifacts).to.be.an('array').that.has.lengthOf(0);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": [
						{
							"name": "Obtener todas las aerolíneas",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airlines",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get All Users in Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Non Empty list\", function() {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson).to.be.an('array').that.is.not.empty;\r",
									"    pm.expect(responseJson).to.have.lengthOf(3);\r",
									"    pm.expect(responseJson[0].id).to.equal(pm.environment.get(\"userId1\"));\r",
									"    pm.expect(responseJson[1].id).to.equal(pm.environment.get(\"userId2\"));\r",
									"    pm.expect(responseJson[2].id).to.equal(pm.environment.get(\"userId3\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"username\": \"{{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get All Users in Org that doesn't exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 412\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Get error message\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"The organization provided does not exist\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"username\": \"{{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{$randomUUID}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{$randomUUID}}",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get All Users Bad Org id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 412\", function() {\r",
									"    pm.response.to.have.status(412)\r",
									"});\r",
									"\r",
									"pm.test(\"Get error message\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"The organizationId provided is not valid\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"username\": \"{{$randomUserName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/bad-org-id/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"bad-org-id",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update User 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Info is present\", function() {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(pm.response.json().name).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().email).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().username).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.id).to.equal(pm.environment.get(\"userId1\"));\r",
									"    pm.expect(responseData.username).to.equal(\"updated_username\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Owen Donnelly\",\r\n    \"email\": \"Dallas_Carroll11@hotmail.com\",\r\n    \"username\": \"updated_username\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}/users/{{userId1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}",
								"users",
								"{{userId1}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar un aeropuerto",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"773e1818-a2df-418d-8fed-e6c1c565cee3\",\r\n    \"nombre\": \"El Dorado new\",\r\n    \"codigo\": \"BOG new\",\r\n    \"pais\": \"Colombia new\",\r\n    \"ciudad\": \"Bogotá new\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports/{{aeropuertoId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports",
										"{{aeropuertoId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get User 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code is 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Non empty response\", function() {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData.name).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.username).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.id).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(responseData.id).to.equal(pm.environment.get(\"userId1\"));\r",
									"    pm.expect(responseData.username).to.equal(\"updated_username\")\r",
									"    pm.expect(responseData.name).to.equal(\"Owen Donnelly\")\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations/{{orgId}}/users/{{userId1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations",
								"{{orgId}}",
								"users",
								"{{userId1}}"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "User Copy",
			"item": [
				{
					"name": "crear socio 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"socioId2\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().email).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().fechaNacimiento).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Eduardo Salamanca 2\",\r\n    \"email\": \"email2@email.com\",\r\n    \"fechaNacimiento\": \"2020-01-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 2",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"1619c9c1-b301-4231-94bf-ea9c172ddb14\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "crear socio 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"socioId3\", pm.response.json().id);\r",
									"\r",
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().email).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().fechaNacimiento).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Eduardo Salamanca 3\",\r\n    \"email\": \"email3@email.com\",\r\n    \"fechaNacimiento\": \"2020-01-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "crear socio no valido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 412\", function() {\r",
									"    pm.response.to.have.status(412)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().message).to.be.contains('El email proporcionado no es válido');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Eduardo Salamanca 3\",\r\n    \"email\": \"email3\",\r\n    \"fechaNacimiento\": \"2020-01-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						}
					},
					"response": [
						{
							"name": "Crear aeropuerto 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"El Dorado\",\r\n    \"codigo\": \"BOG\",\r\n    \"pais\": \"Colombia\",\r\n    \"ciudad\": \"Bogotá\",\r\n    \"id\": \"41c580d1-0afa-4ef6-9f62-5c7d2d44f1a4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener todos los socios",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"La lista no está vacía\", function() {\r",
									"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						}
					},
					"response": [
						{
							"name": "Obtener todos los aeropuertos",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un socio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().email).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().fechaNacimiento).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/{{socioId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{socioId}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un aeropuerto",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airports/{{aeropuertoId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports",
										"{{aeropuertoId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un socio que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"El socio con el id provisto no existe\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/{{$guid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{$guid}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un aeropuerto que no existe",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airports/{{$guid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports",
										"{{$guid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Actualizar un socio que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"El socio con el id provisto no existe\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Eduardo Salamanca\",\r\n    \"email\": \"email@email.com\",\r\n    \"fechaNacimiento\": \"2020-01-01\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members/{{$guid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{$guid}}"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar un aeropuerto que no existe",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El aeropuerto con el id dado no fue encontrado\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports/{{$guid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports",
										"{{$guid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Eliminar un socio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 204\", function() {\r",
									"    pm.response.to.have.status(204)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/{{socioId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{socioId}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar un aeropuerto",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/airports/{{aeropuertoId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports",
										"{{aeropuertoId}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Eliminar un aeropuerto que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"El socio con el id provisto no existe\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/{{$guid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{$guid}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar un aeropuerto que no existe",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El aeropuerto con el id dado no fue encontrado\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airports/{{$guid}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airports",
										"{{$guid}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Club-Socio",
			"item": [
				{
					"name": "Agregar un socio a un club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 201\", function() {\r",
									"    pm.response.to.have.status(201)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().descripcion).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().fechaFundacion).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().imagen).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"La lista no está vacía\", function() {\r",
									"    pm.expect(pm.response.json().socios).to.be.an('array').that.is.not.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clubs/{{clubId2}}/members/{{socioId2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{clubId2}}",
								"members",
								"{{socioId2}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un aeropuerto a una aerolínea",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"1edc98e8-ed10-47f0-8370-2af1fdaf8807\",\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01T05:00:00.000Z\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\",\r\n    \"aeropuertos\": [\r\n        {\r\n            \"id\": \"1619c9c1-b301-4231-94bf-ea9c172ddb14\",\r\n            \"nombre\": \"El Dorado\",\r\n            \"codigo\": \"BOG\",\r\n            \"pais\": \"Colombia\",\r\n            \"ciudad\": \"Bogotá\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{aeropuertoId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports",
										"{{aeropuertoId2}}"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Agregar un socio que no existe a un club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"El Socio con el id dado no fue encontrado\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clubs/{{clubId2}}/members/{{$guid}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{clubId2}}",
								"members",
								"{{$guid}}"
							]
						}
					},
					"response": [
						{
							"name": "Agregar un aeropuerto a una aerolínea que no existe",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"La aerolínea con el id dado no fue encontrada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{$guid}}/airports/{{aeropuertoId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{$guid}}",
										"airports",
										"{{aeropuertoId2}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener todos los socios de un club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"La lista no está vacía\", function() {\r",
									"    pm.expect(pm.response.json()).to.be.an('array').that.is.not.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clubs/{{clubId2}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{clubId2}}",
								"members"
							]
						}
					},
					"response": [
						{
							"name": "Obtener todos los aeropuertos de una aerolínea",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un socio de una club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().email).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().fechaNacimiento).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clubs/{{clubId2}}/members/{{socioId2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{clubId2}}",
								"members",
								"{{socioId2}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un aeropuerto de una aerolínea",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{aeropuertoId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports",
										"{{aeropuertoId2}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener un socio que no está asociado a un club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 412\", function() {\r",
									"    pm.response.to.have.status(412)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"El Socio con el id dado no está asociado a el Club\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clubs/{{clubId2}}/members/{{socioId3}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{clubId2}}",
								"members",
								"{{socioId3}}"
							]
						}
					},
					"response": [
						{
							"name": "Obtener un aeropuerto que no está asociado a una aerolínea",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{aeropuertoId3}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports",
										"{{aeropuertoId3}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Actualizar los socios de un club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"pm.test(\"Información presente\", function() {\r",
									"    pm.expect(pm.response.json().nombre).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().descripcion).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().fechaFundacion).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().imagen).to.be.a('string').and.to.not.be.empty;\r",
									"    pm.expect(pm.response.json().id).to.be.a('string').and.to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"La lista no está vacía\", function() {\r",
									"    pm.expect(pm.response.json().socios).to.be.an('array').that.is.not.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{socioId3}}\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/clubs/{{clubId2}}/members/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{clubId2}}",
								"members",
								""
							]
						}
					},
					"response": [
						{
							"name": "Actualizar los aeropuertos de una aerolínea",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"1edc98e8-ed10-47f0-8370-2af1fdaf8807\",\r\n    \"nombre\": \"Latam Airlines\",\r\n    \"descripcion\": \"LATAM Airlines es la mayor aerolínea de América Latina, formada por la fusión de LAN y TAM en 2012. Tiene sede en Santiago de Chile y opera vuelos nacionales e internacionales en América, Europa, Asia y Oceanía. Con hubs en ciudades como São Paulo y Lima, LATAM se destaca por su moderna flota y su enfoque en la sostenibilidad.\",\r\n    \"fechaFundacion\": \"2020-01-01T05:00:00.000Z\",\r\n    \"urlPaginaWeb\": \"https://www.latamairlines.com/co/es\",\r\n    \"aeropuertos\": [\r\n        {\r\n            \"id\": \"1619c9c1-b301-4231-94bf-ea9c172ddb14\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Actualizar los socios de un club con un socio que no existe",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 404\", function() {\r",
									"    pm.response.to.have.status(404)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"El Socio con el id dado no fue encontrado\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{$guid}}\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/clubs/{{clubId2}}/members/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{clubId2}}",
								"members",
								""
							]
						}
					},
					"response": [
						{
							"name": "Actualizar los aeropuertos de una aerolínea con aeropuertos que no existen",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"El aeropuerto con el id dado no fue encontrado\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Eliminar un socio de un club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 204\", function() {\r",
									"    pm.response.to.have.status(204)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clubs/{{clubId2}}/members/{{socioId3}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{clubId2}}",
								"members",
								"{{socioId3}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar un aeropuerto de una aerolínea",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{aeropuertoId2}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports",
										"{{aeropuertoId2}}"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Eliminar un socio que no está asociado al club",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El código de estado es 412\", function() {\r",
									"    pm.response.to.have.status(412)\r",
									"});\r",
									"\r",
									"pm.test(\"Obtener el mensaje de error esperado\", function() {\r",
									"   pm.expect(pm.response.json().message).to.eql(\"El Socio con el id dado no está asociado a el Club\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/clubs/{{clubId2}}/members/{{socioId3}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{clubId2}}",
								"members",
								"{{socioId3}}"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar un aeropuerto que no está asociado a una aerolínea",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"statusCode\": 412,\r\n    \"message\": \"El aeropuerto con el id dado no está asociado a la aerolínea\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/airlines/{{aerolineaId2}}/airports/{{aeropuertoId3}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"airlines",
										"{{aerolineaId2}}",
										"airports",
										"{{aeropuertoId3}}"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	]
}