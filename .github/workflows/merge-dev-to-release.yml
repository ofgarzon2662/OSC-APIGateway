name: Creation of Release Branch
on:
  push:
    branches:
      - 'develop'

permissions:
  contents: write
  pull-requests: write

jobs:
  tests:
    name: Tests
    if: ${{ contains(github.event.head_commit.message, 'RELEASE') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to develop branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run Jest tests with coverage
        run: npm run test:cov | tee test-output.txt

      - name: Extract and Validate Service Coverage
        run: |
          # Extract line coverage for all service files
          COVERAGE_LIST=$(grep "service.ts" test-output.txt | awk '{print $5}' | tr -d '%')
          echo "Extracted Coverage for Services:"
          echo "$COVERAGE_LIST"
      
          # Loop through each extracted coverage value
          for COVERAGE in $COVERAGE_LIST; do
            if [ "$COVERAGE" -lt 85 ]; then
              echo "❌ A service file has coverage below 85%! Aborting merge."
              exit 1
            fi
          done
      
          echo "✅ All service files have sufficient coverage!"

      - name: Coverage Passed
        run: echo "✅ Test coverage is sufficient! Proceeding with merge."

      - name: Sanitize commit message for branch name
        id: sanitize_message
        run: |
          # Sanitize the commit message to create a valid branch name
          BRANCH_NAME=$(echo "${{ github.event.head_commit.message }}" | sed -e 's/[^a-zA-Z0-9._-]/-/g' | cut -c1-50)
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Create a new release branch from develop
        run: |
          git checkout -b $BRANCH_NAME develop
          git push origin $BRANCH_NAME
